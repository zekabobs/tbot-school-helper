from aiogram.types import Message

from utils import utils
from decorators import auth
from loader import dp, sql


@dp.message_handler(regexp=r'^(—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ)$|^(—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ \d{1,2})|^—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–±—â–µ–µ$')
@auth
async def send_timetable(message: Message):
    text = message.text.strip().lower()
    user_id = message.chat.id

    category = sql.get_category(user_id)
    if text == '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ' and category=='scholar':
        class_ = str(sql.get_scholar(user_id)[-1][-1])
        timetable = utils.get_timetable(class_)

    elif text == '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ' or text=='—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–±—â–µ–µ':
        timetable = utils.get_timetable()

    else:
        timetable = utils.get_timetable(text.replace('—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '').strip())

    if not timetable:
        await message.answer('–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ üìú')
    else:
        await message.answer_photo(timetable)